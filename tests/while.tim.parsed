TOKEN_FUNC (2): func (1)
TOKEN_IDENTIFIER (4): testwhile (1)
TOKEN_PARENTHESE_START (11): ( (1)
TOKEN_PARENTHESE_END (12): ) (1)
TOKEN_BLOCK_START (9): { (1)
TOKEN_IDENTIFIER (4): int (2)
TOKEN_IDENTIFIER (4): x (2)
TOKEN_WHILE (8): while (3)
TOKEN_PARENTHESE_START (11): ( (3)
TOKEN_IDENTIFIER (4): x (3)
TOKEN_OPERATOR (5): < (3)
TOKEN_IDENTIFIER (4): 5 (3)
TOKEN_PARENTHESE_END (12): ) (3)
TOKEN_BLOCK_START (9): { (3)
TOKEN_IDENTIFIER (4): int (4)
TOKEN_IDENTIFIER (4): w (4)
TOKEN_OPERATOR (5): ++ (5)
TOKEN_IDENTIFIER (4): x (5)
TOKEN_BLOCK_END (10): } (6)
TOKEN_WHILE (8): while (7)
TOKEN_PARENTHESE_START (11): ( (7)
TOKEN_IDENTIFIER (4): x (7)
TOKEN_OPERATOR (5): < (7)
TOKEN_IDENTIFIER (4): 5 (7)
TOKEN_PARENTHESE_END (12): ) (7)
TOKEN_OPERATOR (5): ++ (7)
TOKEN_IDENTIFIER (4): x (7)
TOKEN_BLOCK_END (10): } (8)
[TRANSLATION_UNIT,
	[FUNCTION_DEFINITION,
		[DECLARATOR,
			[TOKEN_IDENTIFIER, 'testwhile']
		]
		[COMPOUND_STATEMENT,
			[VARIABLE_DECLARATION,
				[TOKEN_IDENTIFIER, 'int']
				[TOKEN_IDENTIFIER, 'x']
			]
			[WHILE_STATEMENT,
				[TOKEN_WHILE, 'while']
				[EXPRESSION_LIST,
					[OPERATOR,
						[TOKEN_OPERATOR, '<']
						[TOKEN_IDENTIFIER, 'x']
						[TOKEN_IDENTIFIER, '5']
					]
				]
				[COMPOUND_STATEMENT,
					[VARIABLE_DECLARATION,
						[TOKEN_IDENTIFIER, 'int']
						[TOKEN_IDENTIFIER, 'w']
					]
					[EXPRESSION_LIST,
						[PREFIX_OPERATOR,
							[TOKEN_OPERATOR, '++']
							[TOKEN_IDENTIFIER, 'x']
						]
					]
				]
			]
			[WHILE_STATEMENT,
				[TOKEN_WHILE, 'while']
				[EXPRESSION_LIST,
					[OPERATOR,
						[TOKEN_OPERATOR, '<']
						[TOKEN_IDENTIFIER, 'x']
						[TOKEN_IDENTIFIER, '5']
					]
				]
				[EXPRESSION_LIST,
					[PREFIX_OPERATOR,
						[TOKEN_OPERATOR, '++']
						[TOKEN_IDENTIFIER, 'x']
					]
				]
			]
		]
		{ SCOPE testwhile (parent global_scope):
			Vars: { VAR "x" TYPE "int" }, { VAR "w" TYPE "int" }
		}
	]
	{ SCOPE global_scope (parent (null)):
		Types:
		{ TYPE "int" INTEGER (size 4) }
		{ TYPE "char" INTEGER (size 1) }
	
		Functions:
		{ FUNC "testwhile" RETURNTYPE "(null)" }
		
	}
]
