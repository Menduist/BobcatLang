TOKEN_FUNC (2): func (1)
TOKEN_IDENTIFIER (4): testadd (1)
TOKEN_PARENTHESE_START (11): ( (1)
TOKEN_IDENTIFIER (4): int (1)
TOKEN_IDENTIFIER (4): a (1)
TOKEN_COMMA (15): , (1)
TOKEN_IDENTIFIER (4): int (1)
TOKEN_IDENTIFIER (4): b (1)
TOKEN_PARENTHESE_END (12): ) (1)
TOKEN_IDENTIFIER (4): int (1)
TOKEN_BLOCK_START (9): { (1)
TOKEN_IDENTIFIER (4): int (2)
TOKEN_IDENTIFIER (4): x (2)
TOKEN_IDENTIFIER (4): x (4)
TOKEN_OPERATOR (5): = (4)
TOKEN_IDENTIFIER (4): 0 (4)
TOKEN_RETURN (18): return (5)
TOKEN_IDENTIFIER (4): a (5)
TOKEN_OPERATOR (5): + (5)
TOKEN_IDENTIFIER (4): b (5)
TOKEN_OPERATOR (5): + (5)
TOKEN_IDENTIFIER (4): x (5)
TOKEN_BLOCK_END (10): } (6)
TOKEN_FUNC (2): func (8)
TOKEN_IDENTIFIER (4): main (8)
TOKEN_PARENTHESE_START (11): ( (8)
TOKEN_PARENTHESE_END (12): ) (8)
TOKEN_BLOCK_START (9): { (8)
TOKEN_IDENTIFIER (4): printi (9)
TOKEN_PARENTHESE_START (11): ( (9)
TOKEN_IDENTIFIER (4): testadd (9)
TOKEN_PARENTHESE_START (11): ( (9)
TOKEN_IDENTIFIER (4): 4 (9)
TOKEN_COMMA (15): , (9)
TOKEN_IDENTIFIER (4): 123 (9)
TOKEN_PARENTHESE_END (12): ) (9)
TOKEN_PARENTHESE_END (12): ) (9)
TOKEN_RETURN (18): return (10)
TOKEN_BLOCK_END (10): } (11)
[TRANSLATION_UNIT,
	[FUNCTION_DEFINITION,
		[DECLARATOR,
			[TOKEN_IDENTIFIER, 'testadd']
			[VARIABLE_DECLARATION,
				[TOKEN_IDENTIFIER, 'int']
				[TOKEN_IDENTIFIER, 'a']
			]
			[VARIABLE_DECLARATION,
				[TOKEN_IDENTIFIER, 'int']
				[TOKEN_IDENTIFIER, 'b']
			]
		]
		[COMPOUND_STATEMENT,
			[VARIABLE_DECLARATION,
				[TOKEN_IDENTIFIER, 'int']
				[TOKEN_IDENTIFIER, 'x' { VAR "x" TYPE "int" } ]
			]
			[EXPRESSION_LIST,
				[OPERATOR,
					[TOKEN_OPERATOR, '=']
					[TOKEN_IDENTIFIER, 'x' { VAR "x" TYPE "int" } ]
					[TOKEN_IDENTIFIER, '0']
				]
			]
			[RETURN_STATEMENT,
				[TOKEN_RETURN, 'return']
				[OPERATOR,
					[TOKEN_OPERATOR, '+']
					[OPERATOR,
						[TOKEN_OPERATOR, '+']
						[TOKEN_IDENTIFIER, 'a' { VAR "a" TYPE "int" } ]
						[TOKEN_IDENTIFIER, 'b' { VAR "b" TYPE "int" } ]
					]
					[TOKEN_IDENTIFIER, 'x' { VAR "x" TYPE "int" } ]
				]
			]
			{ SCOPE testadd (parent global_scope):
				Vars: { VAR "a" TYPE "int" }, { VAR "b" TYPE "int" }, { VAR "x" TYPE "int" }
			}
		]
		[TOKEN_IDENTIFIER, 'int']
		{ FUNCTION "testadd" }
	]
	[FUNCTION_DEFINITION,
		[DECLARATOR,
			[TOKEN_IDENTIFIER, 'main']
		]
		[COMPOUND_STATEMENT,
			[EXPRESSION_LIST,
				[FUNCTION_CALL,
					[TOKEN_PARENTHESE_START, '(']
					[TOKEN_IDENTIFIER, 'printi']
					[FUNCTION_ARG_LIST,
						[FUNCTION_CALL,
							[TOKEN_PARENTHESE_START, '(']
							[TOKEN_IDENTIFIER, 'testadd']
							[FUNCTION_ARG_LIST,
								[TOKEN_IDENTIFIER, '4']
								[TOKEN_IDENTIFIER, '123']
							]
							{ FUNCTION "testadd" }
						]
					]
					{ FUNCTION "printi" }
				]
			]
			[RETURN_STATEMENT,
				[TOKEN_RETURN, 'return']
			]
			{ SCOPE main (parent global_scope):
			}
		]
		{ FUNCTION "main" }
	]
	{ SCOPE global_scope (parent (null)):
		Types:
		{ TYPE "int" INTEGER (size 4) }
		{ TYPE "char" INTEGER (size 1) }
		{ TYPE "string" INTEGER (size 1) }
	
		Functions:
		{ FUNC "printi" RETURNTYPE "(null)"
			Args: { VAR "i" TYPE "int" }
		}
		{ FUNC "prints" RETURNTYPE "(null)"
			Args: { VAR "s" TYPE "string" }
		}
		{ FUNC "testadd" RETURNTYPE "int"
			Args: { VAR "a" TYPE "int" }, { VAR "b" TYPE "int" }
		}
		{ FUNC "main" RETURNTYPE "(null)" }
		
	}
]
