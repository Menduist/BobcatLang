TOKEN_FUNC (2): func (1)
TOKEN_IDENTIFIER (4): main (1)
TOKEN_PARENTHESE_START (11): ( (1)
TOKEN_PARENTHESE_END (12): ) (1)
TOKEN_BLOCK_START (9): { (2)
TOKEN_IDENTIFIER (4): x (3)
TOKEN_OPERATOR (5): = (3)
TOKEN_IDENTIFIER (4): 3 (3)
TOKEN_IDENTIFIER (4): int (4)
TOKEN_IDENTIFIER (4): y (4)
TOKEN_IDENTIFIER (4): y (6)
TOKEN_OPERATOR (5): = (6)
TOKEN_IDENTIFIER (4): 12 (6)
TOKEN_IDENTIFIER (4): x (7)
TOKEN_OPERATOR (5): = (7)
TOKEN_IDENTIFIER (4): y (7)
TOKEN_OPERATOR (5): * (7)
TOKEN_IDENTIFIER (4): x (7)
TOKEN_IDENTIFIER (4): y (8)
TOKEN_OPERATOR (5): = (8)
TOKEN_IDENTIFIER (4): x (8)
TOKEN_OPERATOR (5): / (8)
TOKEN_IDENTIFIER (4): 2 (8)
TOKEN_IDENTIFIER (4): print (9)
TOKEN_PARENTHESE_START (11): ( (9)
TOKEN_IDENTIFIER (4): y (9)
TOKEN_PARENTHESE_END (12): ) (9)
TOKEN_BLOCK_END (10): } (10)
[TRANSLATION_UNIT,
	[FUNCTION_DEFINITION,
		[DECLARATOR,
			[TOKEN_IDENTIFIER, 'main']
		]
		[COMPOUND_STATEMENT,
			[EXPRESSION_LIST,
				[OPERATOR,
					[TOKEN_OPERATOR, '=']
					[TOKEN_IDENTIFIER, 'x']
					[TOKEN_IDENTIFIER, '3']
				]
			]
			[VARIABLE_DECLARATION,
				[TOKEN_IDENTIFIER, 'int']
				[TOKEN_IDENTIFIER, 'y']
			]
			[EXPRESSION_LIST,
				[OPERATOR,
					[TOKEN_OPERATOR, '=']
					[TOKEN_IDENTIFIER, 'y']
					[TOKEN_IDENTIFIER, '12']
				]
			]
			[EXPRESSION_LIST,
				[OPERATOR,
					[TOKEN_OPERATOR, '=']
					[TOKEN_IDENTIFIER, 'x']
					[OPERATOR,
						[TOKEN_OPERATOR, '*']
						[TOKEN_IDENTIFIER, 'y']
						[TOKEN_IDENTIFIER, 'x']
					]
				]
			]
			[EXPRESSION_LIST,
				[OPERATOR,
					[TOKEN_OPERATOR, '=']
					[TOKEN_IDENTIFIER, 'y']
					[OPERATOR,
						[TOKEN_OPERATOR, '/']
						[TOKEN_IDENTIFIER, 'x']
						[TOKEN_IDENTIFIER, '2']
					]
				]
			]
			[EXPRESSION_LIST,
				[FUNCTION_CALL,
					[TOKEN_PARENTHESE_START, '(']
					[TOKEN_IDENTIFIER, 'print']
					[FUNCTION_ARG_LIST,
						[TOKEN_IDENTIFIER, 'y']
					]
				]
			]
		]
		{ SCOPE main (parent global_scope):
			Vars: { VAR "y" TYPE "int" }
		}
	]
	{ SCOPE global_scope (parent (null)):
		Types:
		{ TYPE "int" INTEGER (size 4) }
		{ TYPE "char" INTEGER (size 1) }
	
		Functions:
		{ FUNC "main" RETURNTYPE "(null)" }
		
	}
]
